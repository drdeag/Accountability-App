name: Android APK (Debug)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install SDK platforms & build-tools
        run: |
          yes | sdkmanager "platforms;android-34" "build-tools;34.0.0" "platform-tools"

      - name: Unzip project (handles space & parentheses)
        shell: bash
        run: |
          set -e
          ZIP1="Accountability_Project.zip"
          ZIP2="Accountability_Project (1).zip"
          if [ -f "$ZIP1" ]; then ZIP="$ZIP1";
          elif [ -f "$ZIP2" ]; then ZIP="$ZIP2";
          else echo "ERROR: Neither '$ZIP1' nor '$ZIP2' found in repo root." && exit 1; fi
          echo "Using ZIP: $ZIP"
          rm -rf project
          unzip -q "$ZIP" -d project
          # If the zip has a single top-level folder, move contents up
          INNER_DIR=$(find project -mindepth 1 -maxdepth 1 -type d | head -n 1 || true)
          if [ -n "$INNER_DIR" ] && [ -d "$INNER_DIR/app" ] && [ -f "$INNER_DIR/settings.gradle" ]; then
            shopt -s dotglob
            mv "$INNER_DIR"/* project/
          fi
          ls -la project

      - name: Force AndroidX + Jetifier
        run: |
          echo "android.useAndroidX=true" >> project/gradle.properties
          echo "android.enableJetifier=true" >> project/gradle.properties
          cat project/gradle.properties

      - name: Build debug APK
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: 8.7
          build-root-directory: project
          arguments: assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: accountability-debug-apk
          path: project/app/build/outputs/apk/debug/app-debug.apk
