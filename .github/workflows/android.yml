name: Android APK (Debug)

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up job
        run: echo "Starting build process..."

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      - name: Install SDK platforms & build-tools
        run: sdkmanager "platforms;android-33" "build-tools;33.0.2"

      - name: Unzip project (handles spaces/parentheses; searches repo; picks highest #)
        shell: bash
        run: |
          set -euo pipefail

          # Collect matches anywhere in repo (root or folders), safely (handles spaces)
          mapfile -d '' matches < <(
            find . -type f \( -name 'Accountability_Project.zip' -o -name 'Accountability_Project (*.zip' \) -print0
          )

          if [ ${#matches[@]} -eq 0 ]; then
            echo "ERROR: No Accountability_Project*.zip found in repo."
            echo "Files in repo root:"
            ls -la
            exit 1
          fi

          # Choose the highest-numbered filename (version sort) using just the basename
          pick_basename="$(printf '%s\n' "${matches[@]##*/}" | sort -V | tail -n1)"

          # Resolve the full path that matches the chosen basename
          pick_full=""
          for p in "${matches[@]}"; do
            if [ "${p##*/}" = "$pick_basename" ]; then
              pick_full="$p"
              break
            fi
          done

          echo "Using zip: $pick_full"
          unzip -q "$pick_full" -d .

      - name: Force AndroidX + Jetifier
        run: |
          yes | ./gradlew wrapper --gradle-version 7.4
          ./gradlew dependencies
          ./gradlew jetifier

      - name: Build debug APK
        run: ./gradlew assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk
